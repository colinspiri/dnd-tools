CURRENT COMMIT
todo:
-add advantage and disadvantage to all methods that use roll()
-transfer advantage print statement to show_roll() with advantage

commit msg:
Compacted damage roll formatting

LATER

general:
-do a lot of error checking
-change command components to search for types of data rather than their order
-surround entire program in try except
  -in except, print error message and automatically start a new instance of combat.py with the same initiative order, hit points, and everything

new idea:
-what can players do at certain levels???
  -enter player classes and levels and output cool things the PCs can do (speak with dead, speak with plants, ask their god a question, etc.)

combat:
-add passive abilities to print for NPCs
-move people in initiative using numbers meaning the ranking of initiative (move NAME 1 will move it to the top of the order)
-add damage types and vulnerabilities/resistances/immunities
  -make class for Damage
  damage: {
    amount: NUM,
    type: "TYPE"
  }
-add skills to npcs (manual input in JSON, no proficiency bonus)
-use 'select' command to select an entity in the initiative order to execute a command on; with this, every command takes as a parameter not initiative, but just one entity and gets executed on the entity given
-add space between name and count number for npcs; make name variable just used for displaying and add commands to every creature

rules lookup:
-add spell lookup and simple damaging spells (roll either attack roll and damage, just damage, or damage and halve it)
  "spell_name": {
  "text": "DESCRIPTION OF SPELL AND INSTRUCTIONS",
  "to_roll": ["spell_attack_roll", "damage", "damage_halved"]
  }
-add rules lookup (scrape from roll20?)
  -conditions
  -command "lookup SOMETHING"

character_tracker:
-how to display long features with a lot of text (like Wild Shape)?
-how to organize subclasses - Arcane Traditions, Druid Circles, etc.?
-add leveling up
  -roll for new hit points
  -adility score improvement at levels (4, 8, 12, 16, 19)
  -re-load pc to get new prof_bonus and class features
-add "show" command to see anything about character (hit points, actions, weapons, features)
-add equipment - dict with detailed info on the items
  -add items.json to track how much things cost, weigh, and their descriptions
  -track total weight compared to carrying capacity
